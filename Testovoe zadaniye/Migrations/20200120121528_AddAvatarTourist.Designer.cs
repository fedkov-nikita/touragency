// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Testovoe_zadaniye.DataBase;

namespace Testovoe_zadaniye.Migrations
{
    [DbContext(typeof(TouragencyContext))]
    [Migration("20200120121528_AddAvatarTourist")]
    partial class AddAvatarTourist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Testovoe_zadaniye.DataBase.Guide", b =>
                {
                    b.Property<int>("GuideId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("GuideId");

                    b.ToTable("Guides");
                });

            modelBuilder.Entity("Testovoe_zadaniye.DataBase.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Name");

                    b.HasKey("TourId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Testovoe_zadaniye.DataBase.Tourist", b =>
                {
                    b.Property<int>("Touristid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<byte[]>("Avatar");

                    b.Property<string>("Fullname");

                    b.Property<int>("GuideId");

                    b.Property<string>("Hometown");

                    b.HasKey("Touristid");

                    b.HasIndex("GuideId");

                    b.ToTable("Tourist");
                });

            modelBuilder.Entity("Testovoe_zadaniye.DataBase.TouristTour", b =>
                {
                    b.Property<int>("TouristId");

                    b.Property<int>("TourId");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("TouristId", "TourId");

                    b.HasIndex("TourId");

                    b.ToTable("TouristTour");
                });

            modelBuilder.Entity("Testovoe_zadaniye.DataBase.Tourist", b =>
                {
                    b.HasOne("Testovoe_zadaniye.DataBase.Guide", "Guide")
                        .WithMany("Tourists")
                        .HasForeignKey("GuideId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Testovoe_zadaniye.DataBase.TouristTour", b =>
                {
                    b.HasOne("Testovoe_zadaniye.DataBase.Tour", "Tour")
                        .WithMany("TouristTours")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Testovoe_zadaniye.DataBase.Tourist", "Tourist")
                        .WithMany("TouristTours")
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
